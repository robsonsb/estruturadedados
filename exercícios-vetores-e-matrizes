//Exercícios: Vetores e Matrizes //Desafios:

//1) Crie um programa capaz de ler os dados de uma matriz quadrada de inteiros. Ao final da leitura o programa deverá imprimir o número da linha que contém o menor dentre todos os números lidos.

#include <stdio.h>

int main() {
    int n;
    printf("tamanho da matriz quadrada: ");
    scanf("%d", &n);

    int matriz[n][n];
    printf("Digite os elementos:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &matriz[i][j]);
        }
    }

    int menor = matriz[0][0];
    int linhaMenor = 0;

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (matriz[i][j] < menor) {
                menor = matriz[i][j];
                linhaMenor = i;
            }
        }
    }

    printf("linha com menor numero: %d\n", linhaMenor + 1);

    return 0;
}
=================================================================================================================================
//2) Faça um programa que preenche um vetor aleatoriamente com 10 inteiros, mas a saída deve ser um vetor com valores ordenados.

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main() {
    int vetor[10];
    srand(time(NULL));

    for (int i = 0; i < 10; i++) {
        vetor[i] = rand() % 10 + 1;
    }

    printf("Vetor gerado:\n");
    for (int i = 0; i < 10; i++) {
        printf("v[%d] = %d\n", i, vetor[i]);
    }

    for (int i = 0; i < 10 - 1; i++) {
        for (int j = 0; j < 10 - 1 - i; j++) {
            if (vetor[j] > vetor[j + 1]) {
                int temp = vetor[j];
                vetor[j] = vetor[j + 1];
                vetor[j + 1] = temp;
            }
        }
    }

    printf("\nVetor ordenado:\n");
    for (int i = 0; i < 10; i++) {
        printf("v[%d] = %d\n", i, vetor[i]);
    }

    return 0;
}


===============================================================================================================================
//3) Leia uma matriz de 4 x 4 elementos. Preencha a matriz com dados aleatóreso e calcule a soma dos elementos que estao abaixo da diagonal principal. 

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main() {
    int matriz[4][4];
    int soma = 0;
    srand(time(NULL));

    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            matriz[i][j] = rand() % 10;
        }
    }

    printf("Matriz gerada:\n");
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }

    for (int i = 1; i < 4; i++) {
        for (int j = 0; j < i; j++) {
            soma += matriz[i][j];
        }
    }

    printf("\nSoma dos elementos abaixo da diagonal principal: %d\n", soma);

    return 0;
}
===============================================================================================================================
4) Leia uma matriz de 4 x 4 elementos. Preencha a matriz com dados aleatóreso e e calcule a soma dos elementos que estao na diagonal principal.

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main() {
    int matriz[4][4];
    int soma = 0;
    srand(time(NULL));

    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            matriz[i][j] = rand() % 10; 
        }
    }

    printf("Matriz gerada:\n");
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }

    for (int i = 0; i < 4; i++) {
        soma += matriz[i][i]; 
    }

    printf("\nSoma dos elementos na diagonal principal: %d\n", soma);

    return 0;
}
===============================================================================================================================


  
